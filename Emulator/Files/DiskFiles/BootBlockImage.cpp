// -----------------------------------------------------------------------------
// This file is part of vAmiga
//
// Copyright (C) Dirk W. Hoffmann. www.dirkwhoffmann.de
// Licensed under the GNU General Public License v3
//
// See https://www.gnu.org for license information
// -----------------------------------------------------------------------------

#include "BootBlockImage.h"
#include <string.h>
#include <stdio.h>


//
// Bootblock images
//

const u8 os13_bb[] = {
    
  0x44, 0x4f, 0x53, 0x00, 0xc0, 0x20, 0x0f, 0x19, 0x00, 0x00, 0x03, 0x70,
  0x43, 0xfa, 0x00, 0x18, 0x4e, 0xae, 0xff, 0xa0, 0x4a, 0x80, 0x67, 0x0a,
  0x20, 0x40, 0x20, 0x68, 0x00, 0x16, 0x70, 0x00, 0x4e, 0x75, 0x70, 0xff,
  0x60, 0xfa, 0x64, 0x6f, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
  0x79
};
    
const u8 os20_bb[] = {
    
  0x44, 0x4f, 0x53, 0x01, 0xe3, 0x3d, 0x0e, 0x72, 0x00, 0x00, 0x03, 0x70,
  0x43, 0xfa, 0x00, 0x3e, 0x70, 0x25, 0x4e, 0xae, 0xfd, 0xd8, 0x4a, 0x80,
  0x67, 0x0c, 0x22, 0x40, 0x08, 0xe9, 0x00, 0x06, 0x00, 0x22, 0x4e, 0xae,
  0xfe, 0x62, 0x43, 0xfa, 0x00, 0x18, 0x4e, 0xae, 0xff, 0xa0, 0x4a, 0x80,
  0x67, 0x0a, 0x20, 0x40, 0x20, 0x68, 0x00, 0x16, 0x70, 0x00, 0x4e, 0x75,
  0x70, 0xff, 0x4e, 0x75, 0x64, 0x6f, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72,
  0x61, 0x72, 0x79, 0x00, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f,
  0x6e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79
};
    
const u8 sca_virus_bb[] = {
    
  0x44, 0x4f, 0x53, 0x00, 0x37, 0xfc, 0xbb, 0x02, 0x43, 0x48, 0x57, 0x21,
  0x41, 0xfa, 0xff, 0xf2, 0x43, 0xf9, 0x00, 0x07, 0xec, 0x00, 0x30, 0x3c,
  0x01, 0x00, 0x22, 0xd8, 0x51, 0xc8, 0xff, 0xfc, 0x4e, 0xb9, 0x00, 0x07,
  0xec, 0x88, 0x43, 0xfa, 0x02, 0xe7, 0x2c, 0x79, 0x00, 0x00, 0x00, 0x04,
  0x4e, 0xae, 0xff, 0xa0, 0x20, 0x40, 0x20, 0x68, 0x00, 0x16, 0x70, 0x00,
  0x4e, 0x75, 0x2c, 0x79, 0x00, 0x00, 0x00, 0x04, 0x08, 0x39, 0x00, 0x06,
  0x00, 0xbf, 0xe0, 0x01, 0x66, 0x1c, 0x42, 0xae, 0x00, 0x2e, 0x61, 0x00,
  0x00, 0x3c, 0x4b, 0xf9, 0x00, 0xdf, 0xf0, 0x00, 0x3b, 0x7c, 0x00, 0x60,
  0x01, 0x80, 0x70, 0x32, 0x61, 0x00, 0x02, 0x46, 0x60, 0x1c, 0x61, 0x00,
  0x00, 0x1c, 0x41, 0xf9, 0x00, 0x07, 0xec, 0xa4, 0xb1, 0xee, 0xfe, 0x3a,
  0x67, 0x0c, 0x23, 0xee, 0xfe, 0x3a, 0x00, 0x07, 0xef, 0xde, 0x2d, 0x48,
  0xfe, 0x3a, 0x4e, 0x75, 0x2d, 0x7c, 0x00, 0x07, 0xec, 0x3e, 0x00, 0x2e,
  0x41, 0xee, 0x00, 0x22, 0x42, 0x40, 0x72, 0x17, 0xd0, 0x58, 0x51, 0xc9,
  0xff, 0xfc, 0x46, 0x40, 0x30, 0x80, 0x4e, 0x75, 0x0c, 0xa9, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x24, 0x66, 0x06, 0xb9, 0xe9, 0x00, 0x28, 0x67, 0x06,
  0x4e, 0xf9, 0x00, 0x07, 0xef, 0xdc, 0x42, 0x94, 0x4e, 0xb9, 0x00, 0x07,
  0xef, 0xdc, 0x0c, 0x94, 0x44, 0x4f, 0x53, 0x00, 0x66, 0x30, 0x2d, 0x79,
  0x00, 0x07, 0xef, 0xde, 0xfe, 0x3a, 0x42, 0xb9, 0x00, 0x07, 0xef, 0xde,
  0x48, 0xe7, 0xff, 0xfc, 0x4b, 0xf9, 0x00, 0xdf, 0xf0, 0x00, 0x41, 0xf9,
  0x00, 0x07, 0xec, 0x04, 0x20, 0x10, 0xb0, 0xac, 0x00, 0x04, 0x67, 0x06,
  0x28, 0x49, 0x61, 0x00, 0x00, 0x08, 0x4c, 0xdf, 0x3f, 0xff, 0x4e, 0x75,
  0x04, 0x79, 0x00, 0x01, 0x00, 0x07, 0xee, 0xfc, 0x06, 0x79, 0x00, 0x01,
  0x00, 0x07, 0xee, 0xf8, 0x30, 0x39, 0x00, 0x07, 0xee, 0xf8, 0x02, 0x40,
  0x00, 0x0f, 0x0c, 0x40, 0x00, 0x00, 0x66, 0x04, 0x61, 0x00, 0x00, 0x52,
  0x22, 0x4c, 0x33, 0x7c, 0x00, 0x01, 0x00, 0x1c, 0x2c, 0x79, 0x00, 0x00,
  0x00, 0x04, 0x4e, 0xae, 0xfe, 0x38, 0x22, 0x4c, 0x33, 0x7c, 0x00, 0x03,
  0x00, 0x1c, 0x23, 0x7c, 0x00, 0x00, 0x04, 0x00, 0x00, 0x24, 0x23, 0x7c,
  0x00, 0x07, 0xec, 0x00, 0x00, 0x28, 0x23, 0x7c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x2c, 0x2c, 0x79, 0x00, 0x00, 0x00, 0x04, 0x4e, 0xae, 0xfe, 0x38,
  0x22, 0x4c, 0x33, 0x7c, 0x00, 0x04, 0x00, 0x1c, 0x2c, 0x79, 0x00, 0x00,
  0x00, 0x04, 0x4e, 0xae, 0xfe, 0x38, 0x4e, 0x75, 0x22, 0x4c, 0x42, 0xa9,
  0x00, 0x24, 0x33, 0x7c, 0x00, 0x09, 0x00, 0x1c, 0x2c, 0x79, 0x00, 0x00,
  0x00, 0x04, 0x4e, 0xae, 0xfe, 0x38, 0x47, 0xf9, 0x00, 0x07, 0xeb, 0x00,
  0x43, 0xf9, 0x00, 0x07, 0xee, 0xfe, 0x42, 0x80, 0x2c, 0x79, 0x00, 0x00,
  0x00, 0x04, 0x4e, 0xae, 0xfd, 0xd8, 0x23, 0xc0, 0x00, 0x07, 0xc8, 0xfc,
  0x22, 0x4b, 0x2c, 0x79, 0x00, 0x07, 0xc8, 0xfc, 0x4e, 0xae, 0xff, 0x3a,
  0x41, 0xf9, 0x00, 0x07, 0xea, 0x00, 0x27, 0x48, 0x00, 0x04, 0x70, 0x01,
  0x32, 0x3c, 0x01, 0x40, 0x34, 0x3c, 0x00, 0xc8, 0x2c, 0x79, 0x00, 0x07,
  0xc8, 0xfc, 0x4e, 0xae, 0xfe, 0x7a, 0x2b, 0x7c, 0x00, 0x07, 0xee, 0xc4,
  0x00, 0x80, 0x3b, 0x7c, 0x08, 0x00, 0x01, 0x82, 0x70, 0x64, 0x61, 0x00,
  0x00, 0xcc, 0x45, 0xf9, 0x00, 0x07, 0xef, 0x1b, 0x41, 0xf9, 0x00, 0x07,
  0xc9, 0x00, 0x23, 0xc8, 0x00, 0x07, 0xea, 0x08, 0x30, 0x3c, 0x07, 0xd0,
  0x42, 0x98, 0x51, 0xc8, 0xff, 0xfc, 0x3b, 0x7c, 0x2e, 0x75, 0x00, 0x8e,
  0x3b, 0x7c, 0xf6, 0xd5, 0x00, 0x90, 0x3b, 0x7c, 0x00, 0x38, 0x00, 0x92,
  0x3b, 0x7c, 0x00, 0xd0, 0x00, 0x94, 0x42, 0xad, 0x01, 0x08, 0x3b, 0x7c,
  0x12, 0x00, 0x01, 0x00, 0x42, 0xad, 0x01, 0x02, 0x3b, 0x7c, 0x83, 0x80,
  0x00, 0x96, 0x22, 0x4b, 0x42, 0x80, 0x10, 0x1a, 0x72, 0x51, 0x2c, 0x79,
  0x00, 0x07, 0xc8, 0xfc, 0x4e, 0xae, 0xff, 0x10, 0x22, 0x4b, 0x42, 0x80,
  0x10, 0x1a, 0x0c, 0x00, 0x00, 0x00, 0x67, 0x50, 0x20, 0x4a, 0x45, 0xf2,
  0x00, 0x00, 0x2c, 0x79, 0x00, 0x07, 0xc8, 0xfc, 0x4e, 0xae, 0xff, 0xc4,
  0x74, 0x07, 0x32, 0x3c, 0x08, 0x00, 0x70, 0x02, 0x61, 0x00, 0x00, 0x4a,
  0x3b, 0x41, 0x01, 0x82, 0x06, 0x41, 0x01, 0x22, 0x51, 0xca, 0xff, 0xf0,
  0x42, 0x80, 0x10, 0x1a, 0x61, 0x00, 0x00, 0x36, 0x74, 0x07, 0x70, 0x02,
  0x61, 0x00, 0x00, 0x2e, 0x04, 0x41, 0x01, 0x22, 0x3b, 0x41, 0x01, 0x82,
  0x51, 0xca, 0xff, 0xf0, 0x42, 0x80, 0x10, 0x1a, 0x61, 0x00, 0x00, 0x1a,
  0x60, 0x00, 0xff, 0x52, 0x20, 0x79, 0x00, 0x07, 0xc8, 0xfc, 0x2b, 0x68,
  0x00, 0x26, 0x00, 0x80, 0x3b, 0x7c, 0x01, 0x00, 0x00, 0x96, 0x4e, 0x75,
  0xd0, 0x40, 0x0c, 0x2d, 0x00, 0x00, 0x00, 0x06, 0x66, 0xf8, 0x0c, 0x2d,
  0x00, 0x00, 0x00, 0x06, 0x67, 0xf8, 0x51, 0xc8, 0xff, 0xee, 0x4e, 0x75,
  0x00, 0xe0, 0x00, 0x07, 0x00, 0xe2, 0xc9, 0x00, 0x70, 0x05, 0xff, 0xfe,
  0x01, 0x80, 0x0e, 0x62, 0x74, 0x05, 0xff, 0xfe, 0x01, 0x80, 0x04, 0x10,
  0x75, 0x05, 0xff, 0xfe, 0x01, 0x80, 0x08, 0x00, 0x86, 0x05, 0xff, 0xfe,
  0x01, 0x80, 0x0d, 0x51, 0x8a, 0x05, 0xff, 0xfe, 0x01, 0x80, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xfe, 0x00, 0x2a, 0xff, 0xfa, 0xff, 0xd1, 0x67, 0x72,
  0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
  0x72, 0x79, 0x00, 0x64, 0x6f, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
  0x72, 0x79, 0x00, 0x00, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69,
  0x6e, 0x67, 0x20, 0x77, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x75, 0x6c,
  0x20, 0x68, 0x61, 0x73, 0x20, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65,
  0x64, 0xd2, 0xaa, 0x2d, 0x17, 0x59, 0x6f, 0x75, 0x72, 0x20, 0x41, 0x4d,
  0x49, 0x47, 0x41, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x76, 0x65,
  0x20, 0x21, 0x21, 0x21, 0xbe, 0xa0, 0x41, 0x13, 0x61, 0x6e, 0x64, 0x2c,
  0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x62, 0x65, 0x74, 0x74, 0x65, 0x72,
  0x2e, 0x2e, 0x2e, 0x50, 0x50, 0x04, 0x1f, 0x53, 0x6f, 0x6d, 0x65, 0x20,
  0x6f, 0x66, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x64, 0x69, 0x73, 0x6b,
  0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x65, 0x63, 0x74,
  0x65, 0x64, 0x6e, 0x32, 0x5a, 0x0e, 0x62, 0x79, 0x20, 0x61, 0x20, 0x56,
  0x49, 0x52, 0x55, 0x53, 0x20, 0x21, 0x21, 0x21, 0x8c, 0x78, 0x32, 0x16,
  0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x6d, 0x61, 0x73, 0x74,
  0x65, 0x72, 0x70, 0x69, 0x65, 0x63, 0x65, 0x20, 0x6f, 0x66, 0x82, 0x32,
  0x32, 0x16, 0x54, 0x68, 0x65, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x2d, 0x4d,
  0x69, 0x67, 0x68, 0x74, 0x79, 0x20, 0x53, 0x43, 0x41, 0x20, 0x21, 0x21,
  0xdc, 0x6e, 0x00, 0x00, 0x4e, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x41, 0x21,
  0x53, 0x43, 0x41, 0x21, 0x53, 0x43, 0x41, 0x21, 0x53, 0x43, 0x41, 0x21,
  0x53, 0x43, 0x41, 0x21, 0x53, 0x43, 0x41, 0x21, 0x53, 0x43, 0x41, 0x21,
  0x53, 0x43, 0x41, 0x21
};

const u8 bbandit_virus_bb[] = {

  0x44, 0x4f, 0x53, 0x00, 0x41, 0xd2, 0x5c, 0xca, 0x00, 0x00, 0x03, 0x70,
  0x60, 0x00, 0x00, 0x3e, 0x56, 0x69, 0x72, 0x75, 0x73, 0x20, 0x62, 0x79,
  0x20, 0x42, 0x79, 0x74, 0x65, 0x20, 0x20, 0x20, 0x42, 0x61, 0x6e, 0x64,
  0x69, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x20, 0x39, 0x2e, 0x38, 0x37, 0x2e,
  0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x73, 0x20, 0x3a, 0x00,
  0x00, 0x00, 0x04, 0x69, 0x48, 0xe7, 0x7f, 0x7f, 0x2c, 0x78, 0x00, 0x04,
  0x33, 0xfc, 0x40, 0x00, 0x00, 0xdf, 0xf0, 0x9a, 0x06, 0x2e, 0x00, 0x01,
  0x01, 0x26, 0x30, 0x2e, 0x00, 0x94, 0xc0, 0xbc, 0x00, 0x00, 0x00, 0xf0,
  0xb0, 0x7c, 0x00, 0xf0, 0x66, 0x00, 0x00, 0x40, 0x41, 0xee, 0x01, 0x42,
  0x20, 0x50, 0x22, 0x68, 0x00, 0x18, 0x2a, 0x49, 0x41, 0xfa, 0xff, 0x7e,
  0x45, 0xfa, 0x03, 0x48, 0x12, 0xd8, 0xb5, 0xc8, 0x66, 0xfa, 0x41, 0xfa,
  0xff, 0x70, 0x20, 0x08, 0x41, 0xfa, 0x00, 0x0a, 0x22, 0x08, 0x92, 0x80,
  0xdb, 0xc1, 0x4e, 0xd5, 0x41, 0xfa, 0x03, 0x2c, 0x42, 0x80, 0x20, 0xc0,
  0x20, 0xc0, 0x61, 0x00, 0x00, 0x3e, 0x61, 0x00, 0x00, 0xac, 0x43, 0xfa,
  0x03, 0x0d, 0x4e, 0xae, 0xff, 0xa0, 0x4a, 0x80, 0x67, 0x00, 0x00, 0x24,
  0x20, 0x40, 0x20, 0x68, 0x00, 0x16, 0x04, 0x2e, 0x00, 0x01, 0x01, 0x26,
  0x6c, 0x08, 0x33, 0xfc, 0xc0, 0x00, 0x00, 0xdf, 0xf0, 0x9a, 0x20, 0x3c,
  0x00, 0x00, 0x00, 0x00, 0x4c, 0xdf, 0xfe, 0xfe, 0x4e, 0x75, 0x20, 0x3c,
  0xff, 0xff, 0xff, 0xff, 0x60, 0xf2, 0x33, 0xfc, 0x40, 0x00, 0x00, 0xdf,
  0xf0, 0x9a, 0x06, 0x2e, 0x00, 0x01, 0x01, 0x26, 0x48, 0xe7, 0xc0, 0xfe,
  0x20, 0x3c, 0x00, 0x00, 0x04, 0x00, 0x22, 0x3c, 0x00, 0x00, 0x00, 0x02,
  0x4e, 0xae, 0xff, 0x3a, 0x41, 0xfa, 0x02, 0xd0, 0x20, 0x80, 0x41, 0xee,
  0x01, 0x5e, 0x43, 0xfa, 0x02, 0x98, 0x4e, 0xae, 0xfe, 0xec, 0x4a, 0x80,
  0x67, 0x90, 0x20, 0x40, 0x49, 0xe8, 0xff, 0xe4, 0x4b, 0xfa, 0x02, 0xac,
  0x2a, 0x94, 0x41, 0xfa, 0x00, 0x88, 0x28, 0x88, 0x20, 0x2e, 0x00, 0x94,
  0x41, 0xfa, 0x02, 0xa0, 0x20, 0x80, 0x41, 0xfa, 0x01, 0x8a, 0x2d, 0x48,
  0x00, 0x94, 0x04, 0x2e, 0x00, 0x01, 0x01, 0x26, 0x6c, 0x08, 0x33, 0xfc,
  0xc0, 0x00, 0x00, 0xdf, 0xf0, 0x9a, 0x4c, 0xdf, 0x7f, 0x03, 0x4e, 0x75,
  0x41, 0xfa, 0x02, 0x84, 0x43, 0xe8, 0x00, 0x08, 0x20, 0x89, 0x42, 0xa8,
  0x00, 0x04, 0x2d, 0x48, 0x02, 0x26, 0x32, 0xbc, 0x4a, 0xfc, 0x23, 0x49,
  0x00, 0x02, 0x45, 0xe9, 0x00, 0x1a, 0x23, 0x4a, 0x00, 0x06, 0x13, 0x7c,
  0x00, 0x01, 0x00, 0x0a, 0x13, 0x7c, 0x00, 0x21, 0x00, 0x0b, 0x13, 0x7c,
  0x00, 0x00, 0x00, 0x0c, 0x13, 0x7c, 0x00, 0xf6, 0x00, 0x0d, 0x47, 0xe9,
  0x00, 0x12, 0x23, 0x4b, 0x00, 0x0e, 0x23, 0x7c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x12, 0x47, 0xfa, 0x01, 0xe0, 0x23, 0x4b, 0x00, 0x16, 0x4e, 0xae,
  0xfd, 0x9c, 0x2d, 0x40, 0x02, 0x2a, 0x4e, 0x75, 0x20, 0x29, 0x00, 0x2c,
  0xb0, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x01, 0x00, 0x10, 0x29,
  0x00, 0x1d, 0xb0, 0x3c, 0x00, 0x03, 0x67, 0x00, 0x00, 0x32, 0xb0, 0x3c,
  0x00, 0x02, 0x66, 0x00, 0x00, 0xec, 0x2f, 0x08, 0x20, 0x69, 0x00, 0x18,
  0x10, 0x28, 0x00, 0x41, 0x20, 0x5f, 0x13, 0xc0, 0x00, 0xbf, 0xd1, 0x00,
  0x10, 0x39, 0x00, 0xbf, 0xe0, 0x01, 0x08, 0x00, 0x00, 0x03, 0x67, 0x00,
  0x00, 0xcc, 0x08, 0x00, 0x00, 0x02, 0x67, 0x00, 0x00, 0xc4, 0x48, 0xe7,
  0x40, 0xfe, 0x2c, 0x78, 0x00, 0x04, 0x33, 0xfc, 0x40, 0x00, 0x00, 0xdf,
  0xf0, 0x9a, 0x06, 0x2e, 0x00, 0x01, 0x01, 0x26, 0x13, 0x7c, 0x00, 0x03,
  0x00, 0x1d, 0x26, 0x69, 0x00, 0x28, 0x24, 0x4b, 0x0c, 0xa9, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x24, 0x67, 0x00, 0x00, 0x20, 0x26, 0x7a, 0x01, 0xac,
  0x23, 0x4b, 0x00, 0x28, 0x23, 0x7c, 0x00, 0x00, 0x04, 0x00, 0x00, 0x24,
  0x41, 0xfa, 0xfd, 0xbe, 0x43, 0xfa, 0xff, 0xba, 0x14, 0xd8, 0xb3, 0xc8,
  0x66, 0xfa, 0x24, 0x4b, 0x41, 0xfa, 0xfd, 0xae, 0x43, 0xfa, 0x01, 0x78,
  0x14, 0xd8, 0xb3, 0xc8, 0x66, 0xfa, 0x20, 0x4b, 0x32, 0x3c, 0x00, 0xff,
  0x42, 0x80, 0xd0, 0x98, 0x64, 0x00, 0x00, 0x04, 0x52, 0x80, 0x51, 0xc9,
  0xff, 0xf6, 0x46, 0x80, 0x22, 0x2b, 0x00, 0x04, 0xd2, 0x80, 0x64, 0x00,
  0x00, 0x08, 0xd2, 0xbc, 0x00, 0x00, 0x00, 0x01, 0x27, 0x41, 0x00, 0x04,
  0x41, 0xfa, 0x01, 0x44, 0x0c, 0x50, 0xff, 0xff, 0x67, 0x00, 0x00, 0x14,
  0x06, 0x50, 0x00, 0x01, 0x30, 0x10, 0xb0, 0x7c, 0x00, 0x06, 0x65, 0x00,
  0x00, 0x06, 0x30, 0xbc, 0xff, 0xff, 0x41, 0xfa, 0xfd, 0xa0, 0x06, 0x90,
  0x00, 0x00, 0x00, 0x01, 0x04, 0x2e, 0x00, 0x01, 0x01, 0x26, 0x6c, 0x08,
  0x33, 0xfc, 0xc0, 0x00, 0x00, 0xdf, 0xf0, 0x9a, 0x4c, 0xdf, 0x7f, 0x02,
  0x20, 0x7a, 0x01, 0x10, 0x4e, 0xd0, 0x4b, 0xfa, 0x01, 0x04, 0x0c, 0x55,
  0xff, 0xff, 0x66, 0x00, 0x00, 0x26, 0x4b, 0xfa, 0x00, 0xf6, 0x0c, 0x55,
  0xff, 0xff, 0x66, 0x00, 0x00, 0x1a, 0x4b, 0xfa, 0x00, 0xee, 0x06, 0x95,
  0x00, 0x00, 0x00, 0x01, 0x0c, 0x95, 0x00, 0x00, 0x52, 0x08, 0x65, 0x00,
  0x00, 0x06, 0x61, 0x00, 0x00, 0x08, 0x2a, 0x7a, 0x00, 0xde, 0x4e, 0xd5,
  0x33, 0xfc, 0x40, 0x00, 0x00, 0xdf, 0xf0, 0x9a, 0x06, 0x2e, 0x00, 0x01,
  0x01, 0x26, 0x48, 0xe7, 0xff, 0x00, 0x33, 0xfc, 0x01, 0x00, 0x00, 0xdf,
  0xf0, 0x96, 0x4b, 0xfa, 0x00, 0xb6, 0x42, 0x95, 0x4b, 0xfa, 0x00, 0x88,
  0x10, 0x39, 0x00, 0xbf, 0xed, 0x01, 0x08, 0x00, 0x00, 0x03, 0x67, 0xf4,
  0x10, 0x39, 0x00, 0xbf, 0xec, 0x01, 0x00, 0x39, 0x00, 0x40, 0x00, 0xbf,
  0xee, 0x01, 0x46, 0x00, 0xe2, 0x18, 0x32, 0x3c, 0x06, 0x00, 0x33, 0xfc,
  0x00, 0xd1, 0x0d, 0xff, 0x01, 0x80, 0x51, 0xc9, 0xff, 0xf6, 0x02, 0x39,
  0x00, 0xbf, 0x00, 0xbf, 0xee, 0x01, 0x12, 0x1d, 0xb2, 0x00, 0x66, 0xc0,
  0x0c, 0x15, 0x00, 0xff, 0x67, 0x00, 0x00, 0x04, 0x60, 0xba, 0x33, 0xfc,
  0x81, 0x00, 0x00, 0xdf, 0xf0, 0x96, 0x4c, 0xdf, 0x00, 0xff, 0x04, 0x2e,
  0x00, 0x01, 0x01, 0x26, 0x6c, 0x08, 0x33, 0xfc, 0xc0, 0x00, 0x00, 0xdf,
  0xf0, 0x9a, 0x4e, 0x75, 0x41, 0xfa, 0x00, 0x46, 0x30, 0x10, 0xb0, 0x7c,
  0x00, 0x02, 0x64, 0x00, 0x00, 0x10, 0x06, 0x50, 0x00, 0x01, 0x2c, 0x78,
  0x00, 0x04, 0x61, 0x00, 0xfd, 0x4a, 0x4e, 0x75, 0x30, 0xbc, 0xff, 0xff,
  0x60, 0xf0, 0x64, 0x66, 0x40, 0x67, 0x65, 0xff, 0x74, 0x72, 0x61, 0x63,
  0x6b, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
  0x00, 0x64, 0x6f, 0x73, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79
};


//
// Bootblock signatures
//

#define VIRUS(n,x1,v1,x2,v2,x3,v3,x4,v4,x5,v5,x6,v6,x7,v7) \
{ n, { x1,v1,x2,v2,x3,v3,x4,v4,x5,v5,x6,v6,x7,v7 } , nullptr, 0, BB_VIRUS }

const BBRecord bbRecord[] = {

    {
        "No Boot Block",
        { 6,0,7,0,8,0,9,0,10,0,11,0,12,0 },
        nullptr, 0, BB_STANDARD
    },

    //
    // Standard boot blocks
    //
    
    {
        "AmigaDOS Standard Bootblock 1.3",
        { 4,0xc0, 5,0x20, 6,0x0f, 7,0x19, 8,0x00, 9,0x00, 10,0x03},
        os13_bb, sizeof(os13_bb), BB_STANDARD
    },
    {
        "AmigaDOS Standard Bootblock 2.0",
        { 4,0xe3, 5,0x3d, 6,0x0e, 7,0x72, 8,0x00, 9,0x00, 10,0x03 },
        os20_bb, sizeof(os20_bb), BB_STANDARD
    },
    
    //
    // Viruses (detectable and installable)
    //

    {
        "SCA Virus",
        { 800,101,822,97,900,115,841,71,217,231,9,72,435,7 },
        sca_virus_bb, sizeof(sca_virus_bb), BB_VIRUS
    },
    {
        "Byte Bandit 1 Virus",
        { 18,114,25,66,32,66,35,100,335,252,513,196,639,188 },
        bbandit_virus_bb, sizeof(bbandit_virus_bb), BB_VIRUS
    },

    //
    // Viruses (detectable only)
    //
    
    VIRUS("16-Bit Crew Virus",
          471,104,481,114,371,242,47,174,140,78,380,70,127,36),
    VIRUS("2001 Virus",
          5,251,49,174,1015,50,998,49,938,101,951,115,823,72),
    VIRUS("5th Dimension Virus",
          730,255,620,253,430,98,356,66,267,71,244,185,137,67),
    VIRUS("666 Virus",
          996,54,998,54,976,109,884,101,839,105,848,105,809,97),
    VIRUS("6ULD V8 Virus",
          16,85,19,86,20,56,81,250,371,124,447,1,682,0),
    VIRUS("ABC VirusKiller v1.01 Virus",
        50,65,54,80,23,105,39,49,42,49,339,92,804,98),
    VIRUS("Access Forbidden Virus",
          72,86,73,67,74,67,75,57,354,98,372,114,367,115),
    VIRUS("Acid Virus Terminator 1.0",
          656,78,819,46,788,84,525,85,463,84,340,32,312,32),
    VIRUS("Adam Brierley Loader Virus",
          233,42,179,223,264,255,381,252,392,0,677,69,718,65),
    VIRUS("AHC Virus",
          989,46,992,67,954,114,744,110,764,65,569,124,379,24),
    VIRUS("AIDS Virus",
          5,113,941,114,947,111,961,22,969,32,976,98,1010,86),
    VIRUS("Alert1 Virus",
          5,252,272,48,546,6,165,58,678,244,722,108,493,232),
    VIRUS("Alert1.Corrected Virus",
          165,56,151,174,77,255,399,41,596,0,613,128,431,158),
    VIRUS("Alien New Beat Virus",
          587,69,565,72,576,65,579,69,588,65,593,79,787,104),
    VIRUS("Amida Virus",
          34,65,35,77,37,68,240,240,691,1,953,46,853,113),
    VIRUS("Amiga Fanatic v1.1 Virus",
          624,77,633,84,639,86,640,49,642,49,653,56,654,56),
    VIRUS("Amiga Masters Virus",
          880,80,809,32,895,114,898,105,971,105,358,0,116,177),
    VIRUS("AmigaMan Virus",
          206,115,171,89,313,68,453,2,464,59,490,114,689,3),
    VIRUS("Angel Virus",
          99,216,105,58,107,194,138,82,143,248,145,128,132,66),
    VIRUS("Angel.Decoded Virus",
          12,44,142,255,850,72,978,117,925,101,929,105,938,114),
    VIRUS("ASS Virus Protector 1.0 (KS1.2) Virus",
          421,166,871,82,589,111,378,0,108,69,200,1,865,65),
    VIRUS("ASS Virus Protector 1.0 (KS1.2) Virus [h CCI]", 609,114,615,83,645,105,650,67,828,67,829,73,816,115),
    VIRUS("ASS Virus Protector 1.0 Virus",
          70,69,44,117,754,108,651,83,381,223,877,0,835,83),
    VIRUS("Assassin Virus",
          996,68,1008,68,883,65,860,73,894,82,545,173,275,64),
    VIRUS("ASV-Virus v0.000123 Virus",
          407,65,413,114,423,49,429,110,440,115,814,33,925,86),
    VIRUS("ATOM VirKill 2.0 Virus",
          777,86,780,75,788,65,796,78,802,83,870,86,957,200),
    VIRUS("Australian Parasite [KS1.2] Virus",
          873,104,404,144,877,117,216,78,466,159,176,65,181,64),
    VIRUS("Australian Parasite [KS1.3] Virus",
          1017,65,1000,116,889,114,466,156,437,24,232,254,317,60),
    VIRUS("Avirex Timebomb v1.0 Virus",
          833,84,834,73,843,86,844,49,846,48,873,65,410,83),

    VIRUS("Bad Bytes 1 Virus",
          4,247,6,232,922,72,949,83,957,76,990,83,1002,83),
    VIRUS("Bad Bytes 2 Virus",
          6,221,7,186,887,103,921,90,1005,103,902,66,845,80),
    VIRUS("Bad Bytes 3 Virus",
          998,70,824,114,765,99,912,100,971,32,999,108,5,49),
    VIRUS("Bad Bytes 4 Virus",
          9,72,1000,66,1018,73,893,107,859,19,567,252,445,60),
    VIRUS("Bad Bytes 5 Virus",
          102,117,122,66,66,117,186,71,692,0,473,232,825,128),
    VIRUS("Bahan Butonic 1.1 Virus",
          812,66,815,65,548,0,531,15,457,168,276,103,96,45),
    VIRUS("Bahan Butonic 1.1 Virus [Decoded]",
          932,73,951,84,963,75,984,98,1017,249,506,102,423,4),
    VIRUS("Bamiga Sector One Virus",
          754,0,759,254,768,97,847,69,903,97,197,79,857,160),
    VIRUS("Bavarian Virus",
          162,110,316,255,822,70,866,65,456,97,145,67,827,196),
    VIRUS("Big Ben Virus",
          98,255,219,8,437,223,585,126,801,28,876,0,1007,4),
    VIRUS("Big Boss Virus",
          7,67,9,72,998,71,1016,71,967,66,758,255,895,116),
    VIRUS("BJH Virus",
          997,74,839,77,1021,74,967,101,477,100,211,185,108,0),
    VIRUS("BlackFlash Virus v2.0",
          16,98,27,118,33,86,34,50,839,67,664,64,843,65),
    VIRUS("Blade Runners Virus",
          800,108,913,100,969,32,817,97,825,101,827,115,830,170),
    VIRUS("BLF Virus",
          774,247,760,247,766,178,707,17,567,74,575,174,251,0),
    VIRUS("BLF Virus [Decoded]",
          771,114,797,99,698,67,435,250,108,66,150,2,63,104),
    VIRUS("Blizzard Protector Virus 1.0",
          14,66,25,111,42,57,44,56,53,67,167,156,210,100),
    VIRUS("Blizzard Protector Virus 1.0 [RunFun Virus-Protector v1.1]",
          38,78,45,49,50,69,20,80,25,67,31,67,55,56),
    VIRUS("Blizzard Protector Virus 1.0 [h Ultra T.T]",
          44,76,46,82,49,84,51,84,19,80,160,66,146,15),
    VIRUS("Blizzard Protector Virus 1.0 [Happy Hackers AntiVirus]",
          20,72,39,66,44,80,118,254,211,111,197,64,219,114),
    VIRUS("Blizzard Protector Virus 1.0 [neutralized]",
          12,67,21,128,22,103,30,112,55,79,175,223,215,105),
    VIRUS("Blizzard Protector Virus 1.0 [Ultra-SSF Virusprotect]",
          14,86,28,68,43,85,45,84,51,70,167,156,201,22),
    VIRUS("Blizzard Protector Virus 2.0",
          14,66,18,122,23,80,33,50,35,48,51,67,44,56),
    VIRUS("BJ Virus",
          665,193,743,0,711,113,633,145,547,159,446,0,477,242),
    VIRUS("BJ Virus [Decoded]",
          605,65,573,79,660,69,684,80,183,7,37,109,52,51),
    VIRUS("Boot Aids Virus",
          65,64,172,65,332,78,380,12,455,50,755,127,934,171),
    VIRUS("BootX Killer Virus",
          925,105,951,101,892,116,897,108,555,57,372,78,167,72),
    VIRUS("Byte Bandit 1 Virus [No Bandit Anymore]",
          38,78,50,33,54,46,66,112,407,233,591,75,847,201),
    VIRUS("Byte Bandit.Coded Text Virus",
          16,87,20,115,28,100,35,99,43,57,46,55,56,97),
    VIRUS("Byte Bandit.Error Virus",
          70,66,93,111,102,99,49,254,298,0,493,41,815,46),
    VIRUS("Byte Bandit.Forpib Virus [Amiga Freak]",
          26,84,30,65,36,70,404,0,622,81,666,176,942,101),
    VIRUS("Byte Bandit.Forpib Virus [Digital Age]",
          48,68,56,65,25,82,274,65,604,102,724,0,851,57),
    VIRUS("Byte Bandit.Forpib Virus [Electro-Vision]",
          16,69,25,73,36,84,48,70,555,36,660,6,876,129),
    VIRUS("Byte Bandit.Forpib Virus [Frity]",
          23,70,40,57,62,49,64,54,605,250,947,99,962,111),
    VIRUS("Byte Bandit.Forpib Virus [Germany]",
          21,71,29,33,31,76,43,101,346,78,533,4,737,26),
    VIRUS("Byte Bandit.Forpib Virus [Morbid Angel]",
          25,77,27,114,32,65,34,103,43,57,45,57,48,78),
    VIRUS("Byte Bandit.Forpib Virus [Powerbomb]",
          57,50,59,48,16,80,21,66,26,83,292,73,602,179),
    VIRUS("Byte Bandit.Forpib Virus [Riska]",
          16,82,22,86,31,104,435,64,612,66,856,238,845,128),
    VIRUS("Byte Bandit.Forpib Virus [Starcom 6]",
          35,66,27,83,51,57,52,51,361,4,528,240,787,252),
    VIRUS("Byte Bandit.Forpib Virus [ZAccess 2.0]",
          22,90,31,50,33,48,49,82,55,66,199,46,544,0),
    VIRUS("Byte Bandit.Hauke Virus",
          16,72,22,74,32,66,46,72,52,76,342,76,792,240),
    VIRUS("Byte Bandit.Imitation Virus",
          369,0,770,240,779,238,6,87,205,8,337,0,611,255),
    VIRUS("Byte Bandit.Lemke Virus",
          16,84,39,66,49,76,52,75,293,232,535,38,730,12),
    VIRUS("Byte Bandit.NoHead Virus",
          5,46,7,124,1006,111,1014,116,27,0,36,0,43,128),
    VIRUS("Byte Bandit.Plus Virus",
          4,251,6,156,27,0,43,128,363,72,730,12,620,82),
    VIRUS("Byte Bandit.ShutBerlin Virus",
          36,83,41,66,51,79,61,69,66,82,17,105,344,127),
    VIRUS("Byte Bandit.TBS Virus",
          243,46,217,0,115,64,21,71,43,83,53,83,60,121),
    VIRUS("Byte Bandit.WUS Virus",
          65,0,68,0,39,115,62,117,9,0,6,239,8,0),
    VIRUS("Byte Voyager 1 Virus",
          847,250,849,196,854,179,857,200,859,252,860,78,861,117),
    VIRUS("Byte Voyager 1 Virus [Decoded]",
          802,101,821,69,566,6,40,78,398,76,188,224,125,106),
    VIRUS("Byte Voyager 2 Virus",
          772,255,773,236,774,189,775,24,778,255,777,203,779,252),
    VIRUS("Byte Voyager 2 Virus [Decoded]",
          59,0,264,1,695,4,766,65,506,242,30,112,386,144),
    VIRUS("Byte Warrior Virus [DASA]",
          4,100,10,168,282,48,234,81,117,42,460,0,610,127),
    VIRUS("Byte Warrior Virus [DASA] [Decoded]",
          662,97,691,116,619,32,638,103,744,98,709,122,223,191),
    VIRUS("Byte Warrior Virus [DASA] [Neutralized]",
          193,65,133,113,135,113,22,127,117,42,424,4,467,44),
    VIRUS("Byte Warrior Virus [MAD 3a]",
          198,73,193,65,195,0,4,76,283,60,545,252,801,114),
    VIRUS("Byte Warrior  Virus [Mad 3b]",
          192,77,196,73,21,223,39,64,5,73,48,112,56,108),
    
    VIRUS("Cascade Virus",
          997,99,1003,50,1005,49,302,65,15,68,171,250,254,76),
    VIRUS("CCCP Virus",
          122,78,84,67,87,80,90,73,93,83,561,244,859,200),
    VIRUS("CCCP.Delta Virus",
          84,68,89,86,93,83,12,72,268,116,617,134,792,81),
    VIRUS("Claas Abraham Virus",
          24,0,26,112,28,12,33,0,36,102,38,97,44,115),
    VIRUS("Claas Abraham Virus [Decoded]",
          790,67,798,114,807,117,823,107,429,255,119,252,520,1),
    VIRUS("CLI-Manager Virus",
          864,42,825,75,879,99,936,114,911,252,777,105,697,249),
    VIRUS("CList Virus",
          50,97,53,56,872,97,876,34,880,252,885,238,890,177),
    VIRUS("Clonk! Antivirus Virus",
          842,84,851,65,861,67,874,73,882,69,917,79,974,79),
    VIRUS("Cobra Virus",
          775,67,781,72,787,87,742,107,249,234,47,121,127,213),
    VIRUS("Coder's Nightmare Virus",
          16,67,71,99,90,67,94,82,103,85,115,117,287,154),
    VIRUS("CopyLock Virus",
          46,76,39,169,27,0,17,124,1022,250,1023,237,5,111),
    VIRUS("Corona Covid-19 Virus",
          471,111,211,233,100,0,244,209,328,0,390,12,439,68),
    VIRUS("Cracker Exterminator Virus",
          611,187,629,171,754,173,725,182,766,177,510,78,29,120),
    VIRUS("Cracker Exterminator Virus [Decoded]",
          16,84,21,82,31,101,38,111,686,67,635,99,731,97),
    VIRUS("Crackright Virus (KS1.3)",
          111,58,141,142,238,82,329,255,492,7,587,255,615,42),
};


BootBlockImage::BootBlockImage(const u8 *buffer)
{
    memcpy(data, buffer, 1024);
    size_t i,j;
    
    for (i = 0; i < sizeof(bbRecord) / sizeof(BBRecord); i++) {
                
        for (j = 0; j < 7; j++) {

            printf("%d %d %d\n", bbRecord[i].signature[2*j], bbRecord[i].signature[2*j + 1], data[bbRecord[i].signature[2*j]]);

            u16 pos = bbRecord[i].signature[2*j];
            u16 val = bbRecord[i].signature[2*j + 1];
            if (pos && data[pos] != val) break;
            
            printf("%s: %zu Matches %d\n", bbRecord[i].name, j, val);
        }
        
        if (j == 7) {

            printf("%s: Match found!!!\n", bbRecord[i].name);

            this->type = bbRecord[i].type;
            this->name = bbRecord[i].name;
            return;
        }
    }
}

BootBlockImage::BootBlockImage(const char *name)
{
    memset(data, 0, 1024);
    
    for (size_t i = 0; i < sizeof(bbRecord) / sizeof(BBRecord); i++) {
        
        if (strcmp(bbRecord[i].name, name) == 0) {
            memcpy(this->data, bbRecord[i].image, bbRecord[i].size);
            this->type = bbRecord[i].type;
            this->name = bbRecord[i].name;
            return;
        }
    }
}

BootBlockImage::BootBlockImage(long bootBlockID)
{
    memset(data, 0, 1024);
    const char *name;
    
    switch (bootBlockID) {
            
        case 0:  name = "AmigaDOS Standard Bootblock 1.3"; break;
        case 1:  name = "AmigaDOS Standard Bootblock 2.0"; break;
        case 10: name = "SCA Virus";                       break;
        case 11: name = "Byte Bandit 1 Virus";             break;
        default: name = "";                                break;
    }
    
    BootBlockImage bb = BootBlockImage(name);
    *this = bb;
}

void
BootBlockImage::write(u8 *buffer, size_t first, size_t last)
{
    assert(first < last && last < 1024);
    
    for (size_t i = 0; i < last - first; i++) {
        buffer[i] = data[first + i];
    }
}
